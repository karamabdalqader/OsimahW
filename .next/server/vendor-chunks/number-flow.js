"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/number-flow";
exports.ids = ["vendor-chunks/number-flow"];
exports.modules = {

/***/ "(ssr)/./node_modules/number-flow/dist/lite-BTIaQdTe.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/number-flow/dist/lite-BTIaQdTe.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   D: () => (/* binding */ D),\n/* harmony export */   N: () => (/* binding */ J),\n/* harmony export */   S: () => (/* binding */ G),\n/* harmony export */   c: () => (/* binding */ q),\n/* harmony export */   d: () => (/* binding */ st),\n/* harmony export */   f: () => (/* binding */ nt),\n/* harmony export */   p: () => (/* binding */ A),\n/* harmony export */   r: () => (/* binding */ at)\n/* harmony export */ });\n/* harmony import */ var esm_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! esm-env */ \"(ssr)/./node_modules/esm-env/index.js\");\n/* harmony import */ var _plugins_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./plugins.mjs */ \"(ssr)/./node_modules/number-flow/dist/plugins.mjs\");\n\n\nconst u = (n, t, e) => {\n  const i = document.createElement(n), [s, a] = Array.isArray(t) ? [void 0, t] : [t, e];\n  return s && Object.assign(i, s), a == null || a.forEach((r) => i.appendChild(r)), i;\n}, F = (n, t) => {\n  var e;\n  return t === \"left\" ? n.offsetLeft : (((e = n.offsetParent instanceof HTMLElement ? n.offsetParent : null) == null ? void 0 : e.offsetWidth) ?? 0) - n.offsetWidth - n.offsetLeft;\n}, H = (n) => n.offsetWidth > 0 && n.offsetHeight > 0, st = (n, t) => {\n  esm_env__WEBPACK_IMPORTED_MODULE_0__.BROWSER && !customElements.get(n) && customElements.define(n, t);\n};\nfunction X(n, t, { reverse: e = !1 } = {}) {\n  const i = n.length;\n  for (let s = e ? i - 1 : 0; e ? s >= 0 : s < i; e ? s-- : s++)\n    t(n[s], s);\n}\nfunction nt(n, t, e, i) {\n  const s = t.formatToParts(n);\n  e && s.unshift({ type: \"prefix\", value: e }), i && s.push({ type: \"suffix\", value: i });\n  const a = [], r = [], o = [], c = [], d = {}, p = (h) => `${h}:${d[h] = (d[h] ?? -1) + 1}`;\n  let x = \"\", g = !1, y = !1;\n  for (const h of s) {\n    x += h.value;\n    const l = h.type === \"minusSign\" || h.type === \"plusSign\" ? \"sign\" : h.type;\n    l === \"integer\" ? (g = !0, r.push(...h.value.split(\"\").map((C) => ({ type: l, value: parseInt(C) })))) : l === \"group\" ? r.push({ type: l, value: h.value }) : l === \"decimal\" ? (y = !0, o.push({ type: l, value: h.value, key: p(l) })) : l === \"fraction\" ? o.push(...h.value.split(\"\").map((C) => ({\n      type: l,\n      value: parseInt(C),\n      key: p(l),\n      pos: -1 - d[l]\n    }))) : (g || y ? c : a).push({\n      type: l,\n      value: h.value,\n      key: p(l)\n    });\n  }\n  const T = [];\n  for (let h = r.length - 1; h >= 0; h--) {\n    const l = r[h];\n    T.unshift(l.type === \"integer\" ? {\n      ...l,\n      key: p(l.type),\n      pos: d[l.type]\n    } : {\n      ...l,\n      key: p(l.type)\n    });\n  }\n  return {\n    pre: a,\n    integer: T,\n    fraction: o,\n    post: c,\n    valueAsString: x,\n    value: typeof n == \"string\" ? parseFloat(n) : n\n  };\n}\nconst I = String.raw, V = String.raw, O = esm_env__WEBPACK_IMPORTED_MODULE_0__.BROWSER && (() => {\n  try {\n    document.createElement(\"div\").animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n  } catch {\n    return !1;\n  }\n  return !0;\n})(), z = esm_env__WEBPACK_IMPORTED_MODULE_0__.BROWSER && typeof CSS < \"u\" && CSS.supports && CSS.supports(\"line-height\", \"mod(1,1)\"), A = esm_env__WEBPACK_IMPORTED_MODULE_0__.BROWSER && typeof matchMedia < \"u\" ? matchMedia(\"(prefers-reduced-motion: reduce)\") : null, $ = \"--_number-flow-d-opacity\", U = \"--_number-flow-d-width\", S = \"--_number-flow-dx\", j = \"--_number-flow-d\", Y = (() => {\n  try {\n    return CSS.registerProperty({\n      name: $,\n      syntax: \"<number>\",\n      inherits: !1,\n      initialValue: \"0\"\n    }), CSS.registerProperty({\n      name: S,\n      syntax: \"<length>\",\n      inherits: !0,\n      initialValue: \"0px\"\n    }), CSS.registerProperty({\n      name: U,\n      syntax: \"<number>\",\n      inherits: !1,\n      initialValue: \"0\"\n    }), CSS.registerProperty({\n      name: j,\n      syntax: \"<number>\",\n      inherits: !0,\n      initialValue: \"0\"\n    }), !0;\n  } catch {\n    return !1;\n  }\n})(), P = \"var(--number-flow-char-height, 1em)\", f = \"var(--number-flow-mask-height, 0.25em)\", k = `calc(${f} / 2)`, E = \"var(--number-flow-mask-width, 0.5em)\", m = `calc(${E} / var(--scale-x))`, w = \"#000 0, transparent 71%\", M = V`:host{display:inline-block;direction:ltr;white-space:nowrap;isolation:isolate;line-height:${P} !important}.number,.number__inner{display:inline-block;transform-origin:left top}:host([data-will-change]) :is(.number,.number__inner,.section,.digit,.digit__num,.symbol){will-change:transform}.number{--scale-x:calc(1 + var(${U}) / var(--width));transform:translateX(var(${S})) scaleX(var(--scale-x));margin:0 calc(-1 * ${E});position:relative;-webkit-mask-image:linear-gradient(to right,transparent 0,#000 ${m},#000 calc(100% - ${m}),transparent ),linear-gradient(to bottom,transparent 0,#000 ${f},#000 calc(100% - ${f}),transparent 100% ),radial-gradient(at bottom right,${w}),radial-gradient(at bottom left,${w}),radial-gradient(at top left,${w}),radial-gradient(at top right,${w});-webkit-mask-size:100% calc(100% - ${f} * 2),calc(100% - ${m} * 2) 100%,${m} ${f},${m} ${f},${m} ${f},${m} ${f};-webkit-mask-position:center,center,top left,top right,bottom right,bottom left;-webkit-mask-repeat:no-repeat}.number__inner{padding:${k} ${E};transform:scaleX(calc(1 / var(--scale-x))) translateX(calc(-1 * var(${S})))}:host > :not(.number){z-index:5}.section,.symbol{display:inline-block;position:relative;isolation:isolate}.section::after{content:'\\200b';display:inline-block}.section--justify-left{transform-origin:center left}.section--justify-right{transform-origin:center right}.section > [inert],.symbol > [inert]{margin:0 !important;position:absolute !important;z-index:-1}.digit{display:inline-block;position:relative;--c:var(--current) + var(${j})}.digit__num,.number .section::after{padding:${k} 0}.digit__num{display:inline-block;--offset-raw:mod(var(--length) + var(--n) - mod(var(--c),var(--length)),var(--length));--offset:calc( var(--offset-raw) - var(--length) * round(down,var(--offset-raw) / (var(--length) / 2),1) );--y:clamp(-100%,var(--offset) * 100%,100%);transform:translateY(var(--y))}.digit__num[inert]{position:absolute;top:0;left:50%;transform:translateX(-50%) translateY(var(--y))}.digit:not(.is-spinning) .digit__num[inert]{display:none}.symbol__value{display:inline-block;mix-blend-mode:plus-lighter;white-space:pre}.section--justify-left .symbol > [inert]{left:0}.section--justify-right .symbol > [inert]{right:0}.animate-presence{opacity:calc(1 + var(${$}))}`, G = esm_env__WEBPACK_IMPORTED_MODULE_0__.BROWSER ? HTMLElement : class {\n}, K = V`:host{display:inline-block;direction:ltr;white-space:nowrap;line-height:${P} !important}span{display:inline-block}:host([data-will-change]) span{will-change:transform}.number,.digit{padding:${k} 0}.symbol{white-space:pre}`, Z = (n) => `<span class=\"${n.type === \"integer\" || n.type === \"fraction\" ? \"digit\" : \"symbol\"}\" part=\"${n.type === \"integer\" || n.type === \"fraction\" ? `digit ${n.type}-digit` : `symbol ${n.type}`}\">${n.value}</span>`, v = (n, t) => `<span part=\"${t}\">${n.reduce((e, i) => e + Z(i), \"\")}</span>`, at = (n) => (\n  // shadowroot=\"open\" non-standard attribute for old Chrome:\n  I`<template shadowroot=\"open\" shadowrootmode=\"open\"\n\t\t\t><style>\n\t\t\t\t${K}</style\n\t\t\t><span role=\"img\" aria-label=\"${n.valueAsString}\"\n\t\t\t\t>${v(n.pre, \"left\")}<span part=\"number\" class=\"number\"\n\t\t\t\t\t>${v(n.integer, \"integer\")}${v(n.fraction, \"fraction\")}</span\n\t\t\t\t>${v(n.post, \"right\")}</span\n\t\t\t></template\n\t\t><span\n\t\t\tstyle=\"font-kerning: none; display: inline-block; line-height: ${P} !important; padding: ${f} 0;\"\n\t\t\t>${n.valueAsString}</span\n\t\t>`\n), q = z && O && Y;\nlet b;\nclass J extends G {\n  constructor() {\n    super(), this.created = !1, this.batched = !1;\n    const { animated: t, ...e } = this.constructor.defaultProps;\n    this._animated = this.computedAnimated = t, Object.assign(this, e);\n  }\n  get animated() {\n    return this._animated;\n  }\n  set animated(t) {\n    var e;\n    this.animated !== t && (this._animated = t, (e = this.shadowRoot) == null || e.getAnimations().forEach((i) => i.finish()));\n  }\n  /**\n   * @internal\n   */\n  set data(t) {\n    var o;\n    if (t == null)\n      return;\n    const { pre: e, integer: i, fraction: s, post: a, value: r } = t;\n    if (this.created) {\n      const c = this._data;\n      this._data = t, this.computedTrend = typeof this.trend == \"function\" ? this.trend(c.value, r) : this.trend, this.computedAnimated = q && this._animated && (!this.respectMotionPreference || !(A != null && A.matches)) && // https://github.com/barvian/number-flow/issues/9\n      H(this), (o = this.plugins) == null || o.forEach((d) => {\n        var p;\n        return (p = d.onUpdate) == null ? void 0 : p.call(d, t, c, this);\n      }), this.batched || this.willUpdate(), this._pre.update(e), this._num.update({ integer: i, fraction: s }), this._post.update(a), this.batched || this.didUpdate();\n    } else {\n      this._data = t, this.attachShadow({ mode: \"open\" });\n      try {\n        this._internals ?? (this._internals = this.attachInternals()), this._internals.role = \"img\";\n      } catch {\n      }\n      if (typeof CSSStyleSheet < \"u\" && this.shadowRoot.adoptedStyleSheets)\n        b || (b = new CSSStyleSheet(), b.replaceSync(M)), this.shadowRoot.adoptedStyleSheets = [b];\n      else {\n        const c = document.createElement(\"style\");\n        c.textContent = M, this.shadowRoot.appendChild(c);\n      }\n      this._pre = new N(this, e, {\n        justify: \"right\",\n        part: \"left\"\n      }), this.shadowRoot.appendChild(this._pre.el), this._num = new Q(this, i, s), this.shadowRoot.appendChild(this._num.el), this._post = new N(this, a, {\n        justify: \"left\",\n        part: \"right\"\n      }), this.shadowRoot.appendChild(this._post.el), this.created = !0;\n    }\n    try {\n      this._internals.ariaLabel = t.valueAsString;\n    } catch {\n    }\n  }\n  /**\n   * @internal\n   */\n  willUpdate() {\n    this._pre.willUpdate(), this._num.willUpdate(), this._post.willUpdate();\n  }\n  /**\n   * @internal\n   */\n  didUpdate() {\n    if (!this.computedAnimated)\n      return;\n    this._abortAnimationsFinish ? this._abortAnimationsFinish.abort() : this.dispatchEvent(new Event(\"animationsstart\")), this._pre.didUpdate(), this._num.didUpdate(), this._post.didUpdate();\n    const t = new AbortController();\n    Promise.all(this.shadowRoot.getAnimations().map((e) => e.finished)).then(() => {\n      t.signal.aborted || (this.dispatchEvent(new Event(\"animationsfinish\")), this._abortAnimationsFinish = void 0);\n    }), this._abortAnimationsFinish = t;\n  }\n}\nJ.defaultProps = {\n  transformTiming: {\n    duration: 900,\n    // Make sure to keep this minified:\n    easing: \"linear(0,.005,.019,.039,.066,.096,.129,.165,.202,.24,.278,.316,.354,.39,.426,.461,.494,.526,.557,.586,.614,.64,.665,.689,.711,.731,.751,.769,.786,.802,.817,.831,.844,.856,.867,.877,.887,.896,.904,.912,.919,.925,.931,.937,.942,.947,.951,.955,.959,.962,.965,.968,.971,.973,.976,.978,.98,.981,.983,.984,.986,.987,.988,.989,.99,.991,.992,.992,.993,.994,.994,.995,.995,.996,.996,.9963,.9967,.9969,.9972,.9975,.9977,.9979,.9981,.9982,.9984,.9985,.9987,.9988,.9989,1)\"\n  },\n  spinTiming: void 0,\n  opacityTiming: { duration: 450, easing: \"ease-out\" },\n  animated: !0,\n  trend: (n, t) => Math.sign(t - n),\n  respectMotionPreference: !0,\n  plugins: void 0,\n  digits: void 0\n};\nclass Q {\n  constructor(t, e, i, { className: s, ...a } = {}) {\n    this.flow = t, this._integer = new L(t, e, {\n      justify: \"right\",\n      part: \"integer\"\n    }), this._fraction = new L(t, i, {\n      justify: \"left\",\n      part: \"fraction\"\n    }), this._inner = u(\"span\", {\n      className: \"number__inner\"\n    }, [this._integer.el, this._fraction.el]), this.el = u(\"span\", {\n      ...a,\n      part: \"number\",\n      className: `number ${s ?? \"\"}`\n    }, [this._inner]);\n  }\n  willUpdate() {\n    this._prevWidth = this.el.offsetWidth, this._prevLeft = this.el.getBoundingClientRect().left, this._integer.willUpdate(), this._fraction.willUpdate();\n  }\n  update({ integer: t, fraction: e }) {\n    this._integer.update(t), this._fraction.update(e);\n  }\n  didUpdate() {\n    const t = this.el.getBoundingClientRect();\n    this._integer.didUpdate(), this._fraction.didUpdate();\n    const e = this._prevLeft - t.left, i = this.el.offsetWidth, s = this._prevWidth - i;\n    this.el.style.setProperty(\"--width\", String(i)), this.el.animate({\n      [S]: [`${e}px`, \"0px\"],\n      [U]: [s, 0]\n    }, {\n      ...this.flow.transformTiming,\n      composite: \"accumulate\"\n    });\n  }\n}\nclass W {\n  constructor(t, e, { justify: i, className: s, ...a }, r) {\n    this.flow = t, this.children = /* @__PURE__ */ new Map(), this.onCharRemove = (c) => () => {\n      this.children.delete(c);\n    }, this.justify = i;\n    const o = e.map((c) => this.addChar(c).el);\n    this.el = u(\"span\", {\n      ...a,\n      className: `section section--justify-${i} ${s ?? \"\"}`\n    }, r ? r(o) : o);\n  }\n  addChar(t, { startDigitsAtZero: e = !1, ...i } = {}) {\n    const s = t.type === \"integer\" || t.type === \"fraction\" ? new D(this, t.type, e ? 0 : t.value, t.pos, {\n      ...i,\n      onRemove: this.onCharRemove(t.key)\n    }) : new tt(this, t.type, t.value, {\n      ...i,\n      onRemove: this.onCharRemove(t.key)\n    });\n    return this.children.set(t.key, s), s;\n  }\n  unpop(t) {\n    t.el.removeAttribute(\"inert\"), t.el.style.top = \"\", t.el.style[this.justify] = \"\";\n  }\n  pop(t) {\n    t.forEach((e) => {\n      e.el.style.top = `${e.el.offsetTop}px`, e.el.style[this.justify] = `${F(e.el, this.justify)}px`;\n    }), t.forEach((e) => {\n      e.el.setAttribute(\"inert\", \"\"), e.present = !1;\n    });\n  }\n  addNewAndUpdateExisting(t) {\n    const e = /* @__PURE__ */ new Map(), i = /* @__PURE__ */ new Map(), s = this.justify === \"left\", a = s ? \"prepend\" : \"append\";\n    if (X(t, (r) => {\n      let o;\n      this.children.has(r.key) ? (o = this.children.get(r.key), i.set(r, o), this.unpop(o), o.present = !0) : (o = this.addChar(r, { startDigitsAtZero: !0, animateIn: !0 }), e.set(r, o)), this.el[a](o.el);\n    }, { reverse: s }), this.flow.computedAnimated) {\n      const r = this.el.getBoundingClientRect();\n      e.forEach((o) => {\n        o.willUpdate(r);\n      });\n    }\n    e.forEach((r, o) => {\n      r.update(o.value);\n    }), i.forEach((r, o) => {\n      r.update(o.value);\n    });\n  }\n  willUpdate() {\n    const t = this.el.getBoundingClientRect();\n    this._prevOffset = t[this.justify], this.children.forEach((e) => e.willUpdate(t));\n  }\n  didUpdate() {\n    const t = this.el.getBoundingClientRect();\n    this.children.forEach((s) => s.didUpdate(t));\n    const e = t[this.justify], i = this._prevOffset - e;\n    i && this.children.size && this.el.animate({\n      transform: [`translateX(${i}px)`, \"none\"]\n    }, {\n      ...this.flow.transformTiming,\n      composite: \"accumulate\"\n    });\n  }\n}\nclass L extends W {\n  update(t) {\n    const e = /* @__PURE__ */ new Map();\n    this.children.forEach((i, s) => {\n      t.find((a) => a.key === s) || e.set(s, i), this.unpop(i);\n    }), this.addNewAndUpdateExisting(t), e.forEach((i) => {\n      i instanceof D && i.update(0);\n    }), this.pop(e);\n  }\n}\nclass N extends W {\n  update(t) {\n    const e = /* @__PURE__ */ new Map();\n    this.children.forEach((i, s) => {\n      t.find((a) => a.key === s) || e.set(s, i);\n    }), this.pop(e), this.addNewAndUpdateExisting(t);\n  }\n}\nclass R {\n  constructor(t, e, { onRemove: i, animateIn: s = !1 } = {}) {\n    this.flow = t, this.el = e, this._present = !0, this._remove = () => {\n      var a;\n      this.el.remove(), (a = this._onRemove) == null || a.call(this);\n    }, this.el.classList.add(\"animate-presence\"), this.flow.computedAnimated && s && this.el.animate({\n      [$]: [-0.9999, 0]\n    }, {\n      ...this.flow.opacityTiming,\n      composite: \"accumulate\"\n    }), this._onRemove = i;\n  }\n  get present() {\n    return this._present;\n  }\n  set present(t) {\n    if (this._present !== t) {\n      if (this._present = t, t ? this.el.removeAttribute(\"inert\") : this.el.setAttribute(\"inert\", \"\"), !this.flow.computedAnimated) {\n        t || this._remove();\n        return;\n      }\n      this.el.style.setProperty(\"--_number-flow-d-opacity\", t ? \"0\" : \"-.999\"), this.el.animate({\n        [$]: t ? [-0.9999, 0] : [0.999, 0]\n      }, {\n        ...this.flow.opacityTiming,\n        composite: \"accumulate\"\n      }), t ? this.flow.removeEventListener(\"animationsfinish\", this._remove) : this.flow.addEventListener(\"animationsfinish\", this._remove, {\n        once: !0\n      });\n    }\n  }\n}\nclass B extends R {\n  constructor(t, e, i, s) {\n    super(t.flow, i, s), this.section = t, this.value = e, this.el = i;\n  }\n}\nclass D extends B {\n  constructor(t, e, i, s, a) {\n    var d, p;\n    const r = (((p = (d = t.flow.digits) == null ? void 0 : d[s]) == null ? void 0 : p.max) ?? 9) + 1, o = Array.from({ length: r }).map((x, g) => {\n      const y = u(\"span\", { className: \"digit__num\" }, [\n        document.createTextNode(String(g))\n      ]);\n      return g !== i && y.setAttribute(\"inert\", \"\"), y.style.setProperty(\"--n\", String(g)), y;\n    }), c = u(\"span\", {\n      part: `digit ${e}-digit`,\n      className: \"digit\"\n    }, o);\n    c.style.setProperty(\"--current\", String(i)), c.style.setProperty(\"--length\", String(r)), super(t, i, c, a), this.pos = s, this._onAnimationsFinish = () => {\n      this.el.classList.remove(\"is-spinning\");\n    }, this._numbers = o, this.length = r;\n  }\n  willUpdate(t) {\n    const e = this.el.getBoundingClientRect();\n    this._prevValue = this.value;\n    const i = e[this.section.justify] - t[this.section.justify], s = e.width / 2;\n    this._prevCenter = this.section.justify === \"left\" ? i + s : i - s;\n  }\n  update(t) {\n    this.el.style.setProperty(\"--current\", String(t)), this._numbers.forEach((e, i) => i === t ? e.removeAttribute(\"inert\") : e.setAttribute(\"inert\", \"\")), this.value = t;\n  }\n  didUpdate(t) {\n    const e = this.el.getBoundingClientRect(), i = e[this.section.justify] - t[this.section.justify], s = e.width / 2, a = this.section.justify === \"left\" ? i + s : i - s, r = this._prevCenter - a;\n    r && this.el.animate({\n      transform: [`translateX(${r}px)`, \"none\"]\n    }, {\n      ...this.flow.transformTiming,\n      composite: \"accumulate\"\n    });\n    const o = this.getDelta();\n    o && (this.el.classList.add(\"is-spinning\"), this.el.animate({\n      [j]: [-o, 0]\n    }, {\n      ...this.flow.spinTiming ?? this.flow.transformTiming,\n      composite: \"accumulate\"\n    }), this.flow.addEventListener(\"animationsfinish\", this._onAnimationsFinish, { once: !0 }));\n  }\n  getDelta() {\n    var i;\n    if (this.flow.plugins)\n      for (const s of this.flow.plugins) {\n        const a = (i = s.getDelta) == null ? void 0 : i.call(s, this.value, this._prevValue, this);\n        if (a != null)\n          return a;\n      }\n    const t = this.value - this._prevValue, e = this.flow.computedTrend || Math.sign(t);\n    return e < 0 && this.value > this._prevValue ? this.value - this.length - this._prevValue : e > 0 && this.value < this._prevValue ? this.length - this._prevValue + this.value : t;\n  }\n}\nclass tt extends B {\n  constructor(t, e, i, s) {\n    const a = u(\"span\", {\n      className: \"symbol__value\",\n      textContent: i\n    });\n    super(t, i, u(\"span\", {\n      part: `symbol ${e}`,\n      className: \"symbol\"\n    }, [a]), s), this.type = e, this._children = /* @__PURE__ */ new Map(), this._onChildRemove = (r) => () => {\n      this._children.delete(r);\n    }, this._children.set(i, new R(this.flow, a, {\n      onRemove: this._onChildRemove(i)\n    }));\n  }\n  willUpdate(t) {\n    if (this.type === \"decimal\")\n      return;\n    const e = this.el.getBoundingClientRect();\n    this._prevOffset = e[this.section.justify] - t[this.section.justify];\n  }\n  update(t) {\n    if (this.value !== t) {\n      const e = this._children.get(this.value);\n      e && (e.present = !1);\n      const i = this._children.get(t);\n      if (i)\n        i.present = !0;\n      else {\n        const s = u(\"span\", {\n          className: \"symbol__value\",\n          textContent: t\n        });\n        this.el.appendChild(s), this._children.set(t, new R(this.flow, s, {\n          animateIn: !0,\n          onRemove: this._onChildRemove(t)\n        }));\n      }\n    }\n    this.value = t;\n  }\n  didUpdate(t) {\n    if (this.type === \"decimal\")\n      return;\n    const i = this.el.getBoundingClientRect()[this.section.justify] - t[this.section.justify], s = this._prevOffset - i;\n    s && this.el.animate({\n      transform: [`translateX(${s}px)`, \"none\"]\n    }, { ...this.flow.transformTiming, composite: \"accumulate\" });\n  }\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/number-flow/dist/lite-BTIaQdTe.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/number-flow/dist/lite.mjs":
/*!************************************************!*\
  !*** ./node_modules/number-flow/dist/lite.mjs ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Digit: () => (/* reexport safe */ _lite_BTIaQdTe_mjs__WEBPACK_IMPORTED_MODULE_0__.D),\n/* harmony export */   canAnimate: () => (/* reexport safe */ _lite_BTIaQdTe_mjs__WEBPACK_IMPORTED_MODULE_0__.c),\n/* harmony export */   continuous: () => (/* reexport safe */ _plugins_mjs__WEBPACK_IMPORTED_MODULE_1__.continuous),\n/* harmony export */   \"default\": () => (/* reexport safe */ _lite_BTIaQdTe_mjs__WEBPACK_IMPORTED_MODULE_0__.N),\n/* harmony export */   define: () => (/* reexport safe */ _lite_BTIaQdTe_mjs__WEBPACK_IMPORTED_MODULE_0__.d),\n/* harmony export */   formatToData: () => (/* reexport safe */ _lite_BTIaQdTe_mjs__WEBPACK_IMPORTED_MODULE_0__.f),\n/* harmony export */   prefersReducedMotion: () => (/* reexport safe */ _lite_BTIaQdTe_mjs__WEBPACK_IMPORTED_MODULE_0__.p),\n/* harmony export */   renderInnerHTML: () => (/* reexport safe */ _lite_BTIaQdTe_mjs__WEBPACK_IMPORTED_MODULE_0__.r)\n/* harmony export */ });\n/* harmony import */ var _lite_BTIaQdTe_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lite-BTIaQdTe.mjs */ \"(ssr)/./node_modules/number-flow/dist/lite-BTIaQdTe.mjs\");\n/* harmony import */ var _plugins_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./plugins.mjs */ \"(ssr)/./node_modules/number-flow/dist/plugins.mjs\");\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbnVtYmVyLWZsb3cvZGlzdC9saXRlLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQTZGO0FBQzdDO0FBVTlDIiwic291cmNlcyI6WyIvaG9tZS9wcm9qZWN0L25vZGVfbW9kdWxlcy9udW1iZXItZmxvdy9kaXN0L2xpdGUubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEQgYXMgciwgYyBhcyBvLCBOIGFzIG4sIGQgYXMgcywgZiBhcyB0LCBwIGFzIGYsIHIgYXMgZCB9IGZyb20gXCIuL2xpdGUtQlRJYVFkVGUubWpzXCI7XG5pbXBvcnQgeyBjb250aW51b3VzIGFzIGMgfSBmcm9tIFwiLi9wbHVnaW5zLm1qc1wiO1xuZXhwb3J0IHtcbiAgciBhcyBEaWdpdCxcbiAgbyBhcyBjYW5BbmltYXRlLFxuICBjIGFzIGNvbnRpbnVvdXMsXG4gIG4gYXMgZGVmYXVsdCxcbiAgcyBhcyBkZWZpbmUsXG4gIHQgYXMgZm9ybWF0VG9EYXRhLFxuICBmIGFzIHByZWZlcnNSZWR1Y2VkTW90aW9uLFxuICBkIGFzIHJlbmRlcklubmVySFRNTFxufTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/number-flow/dist/lite.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/number-flow/dist/plugins.mjs":
/*!***************************************************!*\
  !*** ./node_modules/number-flow/dist/plugins.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   continuous: () => (/* binding */ l)\n/* harmony export */ });\nconst f = (e, n) => e == null ? n : n == null ? e : Math.max(e, n), i = /* @__PURE__ */ new WeakMap(), l = {\n  onUpdate(e, n, o) {\n    if (i.set(o, void 0), !o.computedTrend)\n      return;\n    const s = n.integer.concat(n.fraction).filter((t) => t.type === \"integer\" || t.type === \"fraction\"), r = e.integer.concat(e.fraction).filter((t) => t.type === \"integer\" || t.type === \"fraction\"), u = s.find((t) => !r.find((c) => c.pos === t.pos && c.value === t.value)), a = r.find((t) => !s.find((c) => t.pos === c.pos && t.value === c.value));\n    i.set(o, f(u == null ? void 0 : u.pos, a == null ? void 0 : a.pos));\n  },\n  getDelta(e, n, o) {\n    const s = e - n, r = i.get(o.flow);\n    if (!s && r != null && r >= o.pos)\n      return o.length * o.flow.computedTrend;\n  }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbnVtYmVyLWZsb3cvZGlzdC9wbHVnaW5zLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdFIiwic291cmNlcyI6WyIvaG9tZS9wcm9qZWN0L25vZGVfbW9kdWxlcy9udW1iZXItZmxvdy9kaXN0L3BsdWdpbnMubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGYgPSAoZSwgbikgPT4gZSA9PSBudWxsID8gbiA6IG4gPT0gbnVsbCA/IGUgOiBNYXRoLm1heChlLCBuKSwgaSA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgV2Vha01hcCgpLCBsID0ge1xuICBvblVwZGF0ZShlLCBuLCBvKSB7XG4gICAgaWYgKGkuc2V0KG8sIHZvaWQgMCksICFvLmNvbXB1dGVkVHJlbmQpXG4gICAgICByZXR1cm47XG4gICAgY29uc3QgcyA9IG4uaW50ZWdlci5jb25jYXQobi5mcmFjdGlvbikuZmlsdGVyKCh0KSA9PiB0LnR5cGUgPT09IFwiaW50ZWdlclwiIHx8IHQudHlwZSA9PT0gXCJmcmFjdGlvblwiKSwgciA9IGUuaW50ZWdlci5jb25jYXQoZS5mcmFjdGlvbikuZmlsdGVyKCh0KSA9PiB0LnR5cGUgPT09IFwiaW50ZWdlclwiIHx8IHQudHlwZSA9PT0gXCJmcmFjdGlvblwiKSwgdSA9IHMuZmluZCgodCkgPT4gIXIuZmluZCgoYykgPT4gYy5wb3MgPT09IHQucG9zICYmIGMudmFsdWUgPT09IHQudmFsdWUpKSwgYSA9IHIuZmluZCgodCkgPT4gIXMuZmluZCgoYykgPT4gdC5wb3MgPT09IGMucG9zICYmIHQudmFsdWUgPT09IGMudmFsdWUpKTtcbiAgICBpLnNldChvLCBmKHUgPT0gbnVsbCA/IHZvaWQgMCA6IHUucG9zLCBhID09IG51bGwgPyB2b2lkIDAgOiBhLnBvcykpO1xuICB9LFxuICBnZXREZWx0YShlLCBuLCBvKSB7XG4gICAgY29uc3QgcyA9IGUgLSBuLCByID0gaS5nZXQoby5mbG93KTtcbiAgICBpZiAoIXMgJiYgciAhPSBudWxsICYmIHIgPj0gby5wb3MpXG4gICAgICByZXR1cm4gby5sZW5ndGggKiBvLmZsb3cuY29tcHV0ZWRUcmVuZDtcbiAgfVxufTtcbmV4cG9ydCB7XG4gIGwgYXMgY29udGludW91c1xufTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/number-flow/dist/plugins.mjs\n");

/***/ })

};
;